stages:
  - build-babylon
  - build-maid

build-babylon-arm64-v8a:
  stage: build-babylon
  image: registry.gitlab.com/fdroid/fdroidserver:buildserver-bookworm
  tags:
    - saas-linux-medium-amd64
  only:
    - main
  variables:
    ANDROID_NDK_HOME: /opt/android-ndk
  before_script:
    - apt-get update
    - apt-get install -y -t bookworm-backports cmake wget unzip git build-essential
    - wget https://dl.google.com/android/repository/android-ndk-r26-linux.zip
    - unzip android-ndk-r26-linux.zip -d /opt
    - export ANDROID_NDK_HOME=/opt/android-ndk-r26
    - echo "ANDROID_NDK_HOME=${ANDROID_NDK_HOME}" >> /etc/environment
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - export ANDROID_NDK_HOME=/opt/android-ndk-r26
    - export BABYLON_CPP_DIR=$(pwd)/packages/babylon_tts/src/babylon_cpp
    - pushd $BABYLON_CPP_DIR
    - mkdir -p build
    - cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-21
    - cmake --build build --config Release -- -j$(nproc)
    - popd
    - mkdir -p arm64-v8a
    - cp $BABYLON_CPP_DIR/lib/* arm64-v8a/
  artifacts:
    paths:
      - arm64-v8a/

build-babylon-x86_64:
  stage: build-babylon
  image: registry.gitlab.com/fdroid/fdroidserver:buildserver-bookworm
  tags:
    - saas-linux-medium-amd64
  only:
    - main
  variables:
    ANDROID_NDK_HOME: /opt/android-ndk
  before_script:
    - apt-get update
    - apt-get install -y -t bookworm-backports cmake wget unzip git build-essential
    - wget https://dl.google.com/android/repository/android-ndk-r26-linux.zip
    - unzip android-ndk-r26-linux.zip -d /opt
    - export ANDROID_NDK_HOME=/opt/android-ndk-r26
    - echo "ANDROID_NDK_HOME=${ANDROID_NDK_HOME}" >> /etc/environment
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - export ANDROID_NDK_HOME=/opt/android-ndk-r26
    - export BABYLON_CPP_DIR=$(pwd)/packages/babylon_tts/src/babylon_cpp
    - pushd $BABYLON_CPP_DIR
    - mkdir -p build
    - cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake -DANDROID_ABI=x86_64 -DANDROID_PLATFORM=android-21
    - cmake --build build --config Release -- -j$(nproc)
    - popd
    - mkdir -p x86_64
    - cp $BABYLON_CPP_DIR/lib/* x86_64/
  artifacts:
    paths:
      - x86_64/

build-maid:
  stage: build-maid
  image: registry.gitlab.com/fdroid/fdroidserver:buildserver-bookworm
  tags:
    - saas-linux-medium-amd64
  only:
    - main
  dependencies:
    - build-babylon-arm64-v8a
    - build-babylon-x86_64
  variables:
    repo: /home/runner/work/maid
    ANDROID_HOME: /opt/android-sdk
    ANDROID_SDK_ROOT: ${ANDROID_HOME}
  before_script:
    - rm -rf /home/vagrant/build
    - rm -rf /opt/android-sdk/ndk
    - apt-get update 
    - apt-get install -y openjdk-17-jdk-headless
    - rm -rf $ANDROID_HOME/tools
    - sdkmanager "tools" "platform-tools" "build-tools;31.0.0"
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - export PUB_CACHE=$(pwd)/.pub-cache
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - rm -rf ./packages/babylon_tts/android/src/main/jniLibs
    - mkdir -p ./packages/babylon_tts/android/src/main/jniLibs/arm64-v8a
    - mkdir -p ./packages/babylon_tts/android/src/main/jniLibs/x86_64
    - cp arm64-v8a/* ./packages/babylon_tts/android/src/main/jniLibs/arm64-v8a/
    - cp x86_64/* ./packages/babylon_tts/android/src/main/jniLibs/x86_64/
    - ./packages/flutter/bin/flutter config --no-analytics
    - ./packages/flutter/bin/flutter packages pub get
    - echo "$KEYSTORE" | base64 --decode > ./android/app/key.jks
    - |
      echo "storeFile=key.jks" > ./android/key.properties
      echo "storePassword=$STORE_PASSWORD" >> ./android/key.properties
      echo "releasePassword=$KEY_PASSWORD" >> ./android/key.properties
      echo "releaseAlias=$KEY_ALIAS" >> ./android/key.properties
    - ./packages/flutter/bin/flutter build apk -v --split-per-abi
    - ./packages/flutter/bin/flutter build appbundle -v
    - mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk maid-android-arm64-v8a.apk
    - mv build/app/outputs/flutter-apk/app-x86_64-release.apk maid-android-x86_64.apk
    - mv build/app/outputs/bundle/release/app-release.aab maid-android-bundle.aab
  artifacts:
    paths:
      - maid-android-arm64-v8a.apk
      - maid-android-x86_64.apk
      - maid-android-bundle.aab